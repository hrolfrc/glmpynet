version: 2.1

# ------------------------------------------------------------------------------
# ORBS: Reusable packages of CircleCI configuration.
# ------------------------------------------------------------------------------
orbs:
  python: circleci/python@2.1.1
  codecov: codecov/codecov@5

# ------------------------------------------------------------------------------
# JOBS: Defines the individual tasks to be executed.
# ------------------------------------------------------------------------------
jobs:
  unit-test:
    docker:
      - image: continuumio/miniconda3
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Verify critical files
          command: |
            ls -l README.md pyproject.toml glmpynet/logistic_regression.py || exit 1
      - run:
          name: Install curl for Codecov
          command: |
            apt-get update && apt-get install -y curl gpg
      - restore_cache:
          keys:
            - v1-conda-{{ checksum "environment.yml" }}
      - run:
          name: Set up Conda environment
          command: |
            conda config --set always_yes yes
            conda env update -f environment.yml --prune
      - save_cache:
          paths:
            - /home/circleci/miniconda
          key: v1-conda-{{ checksum "environment.yml" }}
      - run:
          name: Run unit tests
          command: |
            conda init bash
            source ~/.bashrc
            conda activate glmpynet
            conda run -n glmpynet python -m pytest tests/unit/ -v --cov=glmpynet --cov-report=xml
      - store_artifacts:
          path: coverage.xml
      - codecov/upload:
          token: CODECOV_TOKEN
  integration-test:
    docker:
      - image: continuumio/miniconda3
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-conda-{{ checksum "environment.yml" }}
      - run:
          name: Set up Conda environment
          command: |
            conda config --set always_yes yes
            conda env update -f environment.yml --prune
      - save_cache:
          paths:
            - /home/circleci/miniconda
          key: v1-conda-{{ checksum "environment.yml" }}
      - run:
          name: Run integration tests
          command: |
            conda init bash
            source ~/.bashrc
            conda activate glmpynet
            conda run -n glmpynet python -m pytest tests/e2e/ -v --log-file=integration.log
      - store_artifacts:
          path: integration.log
  deploy:
    docker:
      - image: continuumio/miniconda3
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-conda-{{ checksum "environment.yml" }}
      - run:
          name: Set up Conda environment
          command: |
            conda config --set always_yes yes
            conda env update -f environment.yml --prune
      - save_cache:
          paths:
            - /home/circleci/miniconda
          key: v1-conda-{{ checksum "environment.yml" }}
      - run:
          name: Build documentation
          command: |
            conda init bash
            source ~/.bashrc
            conda activate glmpynet
            conda run -n glmpynet sphinx-build -b html doc/ doc/_build/html
      - run:
          name: Build distribution packages
          command: |
            conda init bash
            source ~/.bashrc
            conda activate glmpynet
            conda run -n glmpynet python -m build
      - run:
          name: Upload to PyPI
          command: |
            conda init bash
            source ~/.bashrc
            conda activate glmpynet
            conda run -n glmpynet python -m twine upload dist/* --verbose
      - store_artifacts:
          path: doc/_build/html/
          destination: doc

# ------------------------------------------------------------------------------
# WORKFLOWS: Defines the sequence of jobs to be run.
# ------------------------------------------------------------------------------
workflows:
  build-and-deploy:
    jobs:
      - unit-test
      - integration-test:
          requires:
            - unit-test
      - deploy:
          context:
            - twine    # Provides TWINE_USERNAME and TWINE_PASSWORD
            - codecov  # Provides CODECOV_TOKEN
          requires:
            - integration-test
          filters:
            branches:
              only:
                - master