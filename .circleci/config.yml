version: 2.1

# ------------------------------------------------------------------------------
# ORBS: Reusable packages of CircleCI configuration.
# ------------------------------------------------------------------------------
orbs:
  # Simplifies common Python operations.
  python: circleci/python@2.1.1
  # Simplifies uploading coverage reports to Codecov.
  codecov: codecov/codecov@5

# ------------------------------------------------------------------------------
# JOBS: Defines the individual tasks to be executed.
# ------------------------------------------------------------------------------
jobs:
  unit-test:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Verify critical files
          # Check for the new project structure.
          command: |
            ls -l README.md pyproject.toml glmpynet/logistic_net.py || exit 1

      # CORRECTED: Implement a two-step installation process.
      - run:
          name: Install build-time dependencies first
          command: |
            pip install numpy

      - python/install-packages:
          pkg-manager: pip
          # Install the remaining dependencies.
          args: >
            pytest pytest-cov pytest-mock
            scikit-learn glmnet

      - run:
          name: Run unit tests
          command: |
            python -m pytest tests/unit/ -v --cov=glmpynet --cov-report=xml
      - store_artifacts:
          path: coverage.xml
      - codecov/upload:
          token: CODECOV_TOKEN

  integration-test:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install build-time dependencies first
          command: |
            pip install numpy

      - python/install-packages:
          pkg-manager: pip
          args: >
            pytest pytest-cov pytest-mock
            scikit-learn glmnet
      - run:
          name: Run E2E tests
          command: |
            python -m pytest tests/e2e/ -v --log-file=integration.log
      - store_artifacts:
          path: integration.log

  deploy:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          # Install dependencies for building and deploying.
          args: >
            twine sphinx sphinx_rtd_theme build
      - run:
          name: Build documentation
          command: |
            cd doc
            pip install -r requirements.txt
            make html
            cd ..
      - run:
          name: Build distribution packages
          command: |
            python3 -m build
      - run:
          name: Upload to PyPI
          command: |
            python3 -m twine upload dist/* --verbose
      - store_artifacts:
          path: doc/_build/html/
          destination: doc

# ------------------------------------------------------------------------------
# WORKFLOWS: Defines the sequence of jobs to be run.
# ------------------------------------------------------------------------------
workflows:
  build-and-deploy:
    jobs:
      - unit-test
      - integration-test:
          requires:
            - unit-test
      - deploy:
          context:
            - twine    # Provides TWINE_USERNAME and TWINE_PASSWORD
            - codecov  # Provides CODECOV_TOKEN
          requires:
            - integration-test
          filters:
            branches:
              only:
                - master
